# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-10-24 13:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('loginregis_app', '0008_user_bday'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_cancel', models.BooleanField(default=False)),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('date_paid', models.DateTimeField(auto_now_add=True)),
                ('price_night', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price_cleaning', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('price_servicefee', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('price_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('price_amenitites', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('ab', 'Abkhaz'), ('ady', 'Adyghe'), ('af', 'Afrikaans'), ('ak', 'Akan'), ('sq', 'Albanian'), ('ase', 'American Sign Language'), ('am', 'Amharic'), ('grc', 'Ancient Greek'), ('ar', 'Arabic'), ('an', 'Aragonese'), ('arc', 'Aramaic'), ('hy', 'Armenian'), ('ay', 'Aymara'), ('ban', 'Balinese'), ('eu', 'Basque'), ('bew', 'Betawi'), ('sh', 'Bosnian'), ('br', 'Breton'), ('bg', 'Bulgarian'), ('yue', 'Cantonese'), ('ca', 'Catalan'), ('chr', 'Cherokee'), ('clc', 'Chickasaw'), ('zh', 'Chinese'), ('cop', 'Coptic'), ('kw', 'Cornish'), ('co', 'Corsican'), ('crh', 'Crimean Tatar'), ('sh', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('dwr', 'Dawro'), ('nl', 'Dutch'), ('en', 'English'), ('eo', 'Esperanto'), ('et', 'Estonian'), ('ee', 'Ewe'), ('hif', 'Fiji Hindi'), ('fil', 'Filipino'), ('fi', 'Finnish'), ('fr', 'French'), ('gl', 'Galician'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek, Modern'), ('kl', 'Greenlandic'), ('ht', 'Haitian Creole'), ('haw', 'Hawaiian'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('isc', 'Icelandic'), ('id', 'Indonesian'), ('ia', 'Interlingua'), ('iu', 'Inuktitut'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('jv', 'Javanese'), ('kbd', 'Kabardian'), ('kls', 'Kalasha'), ('kn', 'Kannada'), ('csb', 'Kashubian'), ('km', 'Khmer'), ('rw', 'Kinyarwanda'), ('ko', 'Korean'), ('ku', 'Kurdish'), ('lld', 'Ladin'), ('ltg', 'Latgalian'), ('la', 'Latin'), ('ln', 'Lingala'), ('liv', 'Livonian'), ('jbo', 'Lojban'), ('dsb', 'Lower Sorbian'), ('mk', 'Macedonian'), ('ms', 'Malay'), ('ml', 'Malayalam'), ('cmn', 'Mandarin'), ('gv', 'Manx'), ('mi', 'Maori'), ('mfe', 'Mauritian Creole'), ('gml', 'Middle Low German'), ('nan', 'Min Nan'), ('mn', 'Mongolian'), ('no', 'Norwegian'), ('xcl', 'Old Armenian'), ('ang', 'Old English'), ('fro', 'Old French'), ('kaw', 'Old Javanese'), ('non', 'Old Norse'), ('prg', 'Old Prussian'), ('ory', 'Oriya'), ('pag', 'Pangasinan'), ('pap', 'Papiamentu'), ('ps', 'Pashto'), ('fa', 'Persian'), ('pjt', 'Pitjantjatjara'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('qya', 'Quenya'), ('rap', 'Rapa Nui'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sa', 'Sanskrit'), ('sco', 'Scots'), ('gd', 'Scottish Gaelic'), ('sh', 'Serbian'), ('sh', 'Serbo-Croatian'), ('si', 'Sinhalese'), ('sk', 'Slovak'), ('sl', 'Slovene'), ('es', 'Spanish'), ('sw', 'Swahili'), ('sv', 'Swedish'), ('tl', 'Tagalog'), ('tg', 'Tajik'), ('ta', 'Tamil'), ('roa-tar', 'Tarantino'), ('te', 'Telugu'), ('th', 'Thai'), ('tpi', 'Tok Pisin'), ('tr', 'Turkish'), ('ak', 'Twi'), ('uk', 'Ukrainian'), ('hsb', 'Upper Sorbian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vec', 'Venetian'), ('vi', 'Vietnamese'), ('wym', 'Vilamovian'), ('vo', 'Volapuk'), ('vro', 'Voro'), ('cy', 'Welsh'), ('xh', 'Xhosa'), ('yi', 'Yiddish'), ('zza', 'Zazaki')], default='en', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=30)),
                ('link', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('neighborhood', models.TextField()),
                ('check_in_time', models.CharField(max_length=15)),
                ('check_out_time', models.CharField(max_length=15)),
                ('is_smoking_allowed', models.BooleanField(default=False)),
                ('house_rules', models.TextField()),
                ('is_family_amenities_baby_monitor', models.BooleanField(default=False)),
                ('is_familty_amenities_bathtub', models.BooleanField(default=False)),
                ('is_familty_amenities_changing_table', models.BooleanField(default=False)),
                ('is_familty_amenities_crib', models.BooleanField(default=False)),
                ('is_familty_amenities_fireguards', models.BooleanField(default=False)),
                ('is_familty_amenities_high_chair', models.BooleanField(default=False)),
                ('is_familty_amenities_game_console', models.BooleanField(default=False)),
                ('is_familty_amenities_stair_gates', models.BooleanField(default=False)),
                ('is_amenities_free_parking', models.BooleanField(default=False)),
                ('is_amenities_pool', models.BooleanField(default=False)),
                ('is_amenities_pets_allowed', models.BooleanField(default=False)),
                ('is_amenities_breakfast', models.BooleanField(default=False)),
                ('is_amenities_gym', models.BooleanField(default=False)),
                ('is_amenities_hot_tub', models.BooleanField(default=False)),
                ('is_amenities_washer', models.BooleanField(default=False)),
                ('is_amenities_dryer', models.BooleanField(default=False)),
                ('is_amenities_internet', models.BooleanField(default=False)),
                ('is_amenities_wheelchair', models.BooleanField(default=False)),
                ('is_amenities_elevator', models.BooleanField(default=False)),
                ('is_amenities_fireplace', models.BooleanField(default=False)),
                ('is_amenities_air_conditioning', models.BooleanField(default=False)),
                ('is_amenities_cable_tv', models.BooleanField(default=False)),
                ('is_amenities_iron', models.BooleanField(default=False)),
                ('is_amenities_linen_essentials', models.BooleanField(default=False)),
                ('is_amenities_kitchen', models.BooleanField(default=False)),
                ('is_amenities_tv', models.BooleanField(default=False)),
                ('is_amenities_hair_dryer', models.BooleanField(default=False)),
                ('is_amenities_heating', models.BooleanField(default=False)),
                ('cancellation_policy', models.CharField(max_length=255)),
                ('price_night', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price_cleaning', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('price_servicefee', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('price_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('price_amenitites', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Review_Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cleanliness', models.CharField(choices=[('very_clean', 'My grandmother would be proud!'), ('clean', 'My roommate would tolerate it!'), ('moderately_clean', 'It reminds me of the Dojo kitchen!'), ('dirty', 'My unclogged toilet is cleaner than this!')], max_length=30)),
                ('rating', models.IntegerField(choices=[('1', '1 STAR'), ('2', '2 STARS'), ('3', '3 STARS'), ('4', '4 STARS')])),
                ('is_location_accuracy', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('review_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_reviews', to='loginregis_app.Place')),
            ],
        ),
        migrations.CreateModel(
            name='Review_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=255)),
                ('is_recommend', models.BooleanField()),
                ('is_host', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='bio',
            field=models.TextField(default=django.utils.timezone.now, max_length=500),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='phone_number',
            field=models.CharField(default=django.utils.timezone.now, max_length=30),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AddField(
            model_name='user',
            name='state',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='username',
            field=models.CharField(default=django.utils.timezone.now, max_length=30),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='work',
            field=models.CharField(blank=True, max_length=30),
        ),
        migrations.AddField(
            model_name='user',
            name='zipcode',
            field=models.CharField(default=django.utils.timezone.now, max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='review_user',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list_review', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='review_user',
            name='user_being_reviewed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_review', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='review_place',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_from_user', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='place',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_places', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='picture',
            name='place',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='place_pictures', to='loginregis_app.Place'),
        ),
        migrations.AddField(
            model_name='picture',
            name='user',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_pictures', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='message',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_messages', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='message',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='guest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest_conversations', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_conversations', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='booking',
            name='guest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guest_bookings', to='loginregis_app.User'),
        ),
        migrations.AddField(
            model_name='booking',
            name='place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_bookings', to='loginregis_app.Place'),
        ),
    ]
